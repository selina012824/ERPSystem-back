<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.ERPSystem.mapper.ReceivingMapper">

	<!-- 全ての入荷伝票データを取得 -->
	<select id="getAllReceiving"
		resultType="com.example.ERPSystem.entity.Receiving">
		SELECT * 
		FROM receiving 
		ORDER BY created_at DESC
	</select>

	<!-- 指定した入荷伝票データを取得 -->
	<select id="getReceiving"
		resultType="com.example.ERPSystem.entity.Receiving">
		SELECT * 
		FROM receiving 
		WHERE receiving_id = #{receivingID}
	</select>

	<!-- 入荷伝票重複確認 -->
	<select id="selectReceivingIDCount" resultType="int">
		SELECT COUNT(receiving_id) 
		FROM receiving 
		WHERE receiving_id = #{receivingID}
	</select>

	<!-- 入荷伝票を新規作成 -->
	<insert id="insertReceiving"
		parameterType="com.example.ERPSystem.entity.Receiving">
		INSERT INTO receiving 
		(
			receiving_id,
			purchase_order_id,
			receiving_date,
			status,
			inspector,
			inspection_result,
			supplier_id,
			invoice_status,
			created_at,
			created_by,
			updated_at,
			updated_by
		) 
		VALUES 
		(
			#{receivingID},
			#{purchaseOrderID},
			#{receivingDate},
			#{status},
			#{inspector},
			#{inspectionResult},
			#{supplierID},
			#{invoiceStatus},
			#{createdAt},
			#{createdBy},
			#{updatedAt},
			#{updatedBy}
		)
	</insert>

	<!-- 入荷伝票を編集 -->
	<update id="editReceiving" parameterType="com.example.ERPSystem.vo.EditReceivingVO">
		UPDATE receiving
		SET
			receiving_date = #{receivingDate},
			status = #{status},
			inspector = #{inspector},
			inspection_result =
			#{inspectionResult},
			supplier_id = #{supplierID},
			invoice_status =
			#{invoiceStatus},
			updated_at = #{updatedAt},
			updated_by = #{updatedBy}
		WHERE 
			receiving_id = #{receivingID}
	</update>

	<!-- 複数条件で入荷伝票を検索 -->
	<select id="multiSearch"
		parameterType="com.example.ERPSystem.vo.MultiSerachReceivingReq"
		resultType="com.example.ERPSystem.entity.Receiving">
		SELECT *
		FROM receiving
		<where>
			<if test="receivingID != null and receivingID != ''">
				AND receiving_id LIKE CONCAT('%', #{receivingID}, '%')
			</if>
			<if test="purchaseOrderID != null and purchaseOrderID != ''">
				AND purchase_order_id LIKE CONCAT('%',
				#{purchaseOrderID},
				'%')
			</if>
			<if test="supplierID != null and supplierID != ''">
				AND supplier_id LIKE CONCAT('%', #{supplierID}, '%')
			</if>
			<if test="receivingStartDate != null and receivingEndDate != null">
				AND receiving_date BETWEEN #{receivingStartDate} AND
				#{receivingEndDate}
			</if>
			<if test="status != null and status != ''">
				AND status = #{status}
			</if>
			<if test="inspectionResult != null and inspectionResult != ''">
				AND inspection_result = #{inspectionResult}
			</if>
		</where>
		ORDER BY created_at DESC
	</select>

</mapper>