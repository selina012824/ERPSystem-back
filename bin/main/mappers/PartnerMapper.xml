<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.ERPSystem.mapper.PartnerMapper">

  <!-- すべての取引先情報を取得 -->
  <select id="getAllPartner" resultType="com.example.ERPSystem.entity.Partner">
    SELECT * 
    FROM partner 
    ORDER BY created_at DESC
  </select>

  <!-- 指定された取引先情報を取得 -->
  <select id="getPartner" resultType="com.example.ERPSystem.entity.Partner">
    SELECT * 
    FROM partner 
    WHERE partner_id = #{partnerID}
  </select>

  <!-- 取引先番号の重複を確認 -->
  <select id="selectPartnerIDCount" resultType="int">
    SELECT COUNT(partner_id) 
    FROM partner 
    WHERE partner_id = #{partnerID}
  </select>

  <!-- 取引先を新規追加 -->
  <insert id="insertPartner" parameterType="com.example.ERPSystem.entity.Partner">
    INSERT INTO partner (
      partner_id,
      partner_type,
      partner_name,
      partner_nickname,
      in_response,
      contactor,
      phone,
      cellphone,
      fax_number,
      tax_number,
      address,
      ship_address,
      invoice_address,
      payment,
      remark,
      created_at,
      created_by,
      updated_at,
      updated_by
    )
    VALUES (
      #{partnerID},
      #{partnerType},
      #{partnerName},
      #{partnerNickName},
      #{inResponse},
      #{contactor},
      #{phone},
      #{cellphone},
      #{faxNumber},
      #{taxNumber},
      #{address},
      #{shipAddress},
      #{invoiceAddress},
      #{payment},
      #{remark},
      #{createdAt},
      #{createdBy},
      #{updatedAt},
      #{updatedBy}
    )
  </insert>

  <!-- 取引先情報を編集 -->
  <update id="editPartner" parameterType="com.example.ERPSystem.vo.EditPartnerVO">
    UPDATE partner
    SET
      partner_type = #{partnerType},
      partner_name = #{partnerName},
      partner_nickname = #{partnerNickName},
      in_response = #{inResponse},
      contactor = #{contactor},
      phone = #{phone},
      cellphone = #{cellphone},
      fax_number = #{faxNumber},
      tax_number = #{taxNumber},
      address = #{address},
      ship_address = #{shipAddress},
      invoice_address = #{invoiceAddress},
      payment = #{payment},
      remark = #{remark},
      updated_at = #{updatedAt},
      updated_by = #{updatedBy}
    WHERE
      partner_id = #{partnerID}
  </update>

  <!-- 複数条件で取引先を検索 -->
  <select id="multiSerach" parameterType="com.example.ERPSystem.vo.MultiSearchPartnerReq"
          resultType="com.example.ERPSystem.entity.Partner">
    SELECT *
    FROM partner
    <where>
      <if test="partnerID != null and partnerID != ''">
        AND partner_id LIKE CONCAT('%', #{partnerID}, '%')
      </if>
      <if test="partnerType != null and partnerType != ''">
        AND partner_type LIKE CONCAT('%', #{partnerType}, '%')
      </if>
      <if test="partnerName != null and partnerName != ''">
        AND partner_name LIKE CONCAT('%', #{partnerName}, '%')
      </if>
      <if test="contactor != null and contactor != ''">
        AND contactor LIKE CONCAT('%', #{contactor}, '%')
      </if>
      <if test="phone != null and phone != ''">
        AND phone LIKE CONCAT('%', #{phone}, '%')
      </if>
      <if test="cellphone != null and cellphone != ''">
        AND cellphone LIKE CONCAT('%', #{cellphone}, '%')
      </if>
    </where>
  </select>

  <!-- 複数条件で顧客を検索（新規登録画面用） -->
  <select id="searchCustomer" parameterType="com.example.ERPSystem.vo.CustomerSearchReq"
          resultType="com.example.ERPSystem.entity.Partner">
    SELECT *
    FROM partner
    <where>
      <if test="partnerID != null and partnerID != ''">
        AND partner_id LIKE CONCAT('%', #{partnerID}, '%')
      </if>
      <if test="partnerType != null and partnerType != ''">
        AND partner_type LIKE CONCAT('%', #{partnerType}, '%')
      </if>
      <if test="partnerName != null and partnerName != ''">
        AND partner_name LIKE CONCAT('%', #{partnerName}, '%')
      </if>
      <if test="partnerNickName != null and partnerNickName != ''">
        AND partner_nickname LIKE CONCAT('%', #{partnerNickName}, '%')
      </if>
      <if test="inResponse != null and inResponse != ''">
        AND in_response LIKE CONCAT('%', #{inResponse}, '%')
      </if>
      <if test="contactor != null and contactor != ''">
        AND contactor LIKE CONCAT('%', #{contactor}, '%')
      </if>
      <if test="phone != null and phone != ''">
        AND phone LIKE CONCAT('%', #{phone}, '%')
      </if>
      <if test="cellphone != null and cellphone != ''">
        AND cellphone LIKE CONCAT('%', #{cellphone}, '%')
      </if>
      <if test="faxNumber != null and faxNumber != ''">
        AND fax_number LIKE CONCAT('%', #{faxNumber}, '%')
      </if>
      <if test="taxNumber != null and taxNumber != ''">
        AND tax_number LIKE CONCAT('%', #{taxNumber}, '%')
      </if>
      <if test="address != null and address != ''">
        AND address LIKE CONCAT('%', #{address}, '%')
      </if>
      <if test="shipAddress != null and shipAddress != ''">
        AND ship_address LIKE CONCAT('%', #{shipAddress}, '%')
      </if>
      <if test="invoiceAddress != null and invoiceAddress != ''">
        AND invoice_address LIKE CONCAT('%', #{invoiceAddress}, '%')
      </if>
      <if test="payment != null and payment != ''">
        AND payment LIKE CONCAT('%', #{payment}, '%')
      </if>
    </where>
    ORDER BY created_at DESC
  </select>

</mapper>